parameters:
  - name: test_type

steps:

    - task: s3-cache-action@1
      inputs:
        key: 'poetry | ./poetry.lock'
        location: '.venv'
        debug: true
        workingDirectory: $(SERVICE_DIR)
      name: poetryCache
      displayName: cache python dependencies

    - bash: |
          make install-python
      workingDirectory: $(SERVICE_DIR)
      condition: ne(variables['poetryCache.cacheRestored'], 'true')
      displayName: poetry install

    - bash: |
        export RELEASE_RELEASEID=$(Build.BuildId)
        export SOURCE_COMMIT_ID=$(Build.SourceVersion)
        export APIGEE_ENVIRONMENT="$(APIGEE_ENVIRONMENT)"
        export SERVICE_BASE_PATH="$(SERVICE_BASE_PATH)"
        export STATUS_ENDPOINT_API_KEY="$(status-endpoint-api-key)"
        make -C e2e ${{ parameters.test_type }}

      workingDirectory: $(SERVICE_DIR)
      displayName: run ${{ parameters.test_type }} tests

    - task: PublishTestResults@2
      displayName: publish ${{ parameters.test_type }} test results
      inputs:
          testResultsFiles: |
              $(SERVICE_DIR)/reports/${{ parameters.test_type }}.xml
          failTaskOnFailedTests: true
