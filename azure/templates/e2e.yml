parameters:
  - name: test_type
  - name: app_id
    type: string
    default: ""

steps:

    - task: s3-cache-action@1
      inputs:
        key: 'poetry | ./poetry.lock'
        location: '.venv'
        debug: true
        workingDirectory: $(SERVICE_DIR)
      name: poetryCache
      displayName: cache python dependencies

    - bash: |
          make install-python
      workingDirectory: $(SERVICE_DIR)
      condition: ne(variables['poetryCache.cacheRestored'], 'true')
      displayName: poetry install

    - bash: |
        export SOURCE_COMMIT_ID=$(Build.SourceVersion)
        export PROXY_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
        export APIGEE_ACCESS_TOKEN="$(secret.AccessToken)"
        export APIGEE_ORGANIZATION="nhsd-$(APIGEE_ORGANIZATION)"
        export APIGEE_APP_ID=${{ parameters.app_id }}
        export STATUS_ENDPOINT_API_KEY="$(STATUS_ENDPOINT_API_KEY)"
        make -C e2e ${{ parameters.test_type }}

      workingDirectory: $(SERVICE_DIR)
      displayName: run ${{ parameters.test_type }} tests

    - task: PublishTestResults@2
      displayName: publish ${{ parameters.test_type }} test results
      inputs:
          testResultsFiles: |
              $(SERVICE_DIR)/reports/${{ parameters.test_type }}.xml
          failTaskOnFailedTests: true
