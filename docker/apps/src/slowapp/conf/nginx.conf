user  nginx;
worker_processes 1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;


  log_format json '{'
    '"timestamp": "$time_iso8601", '
    '"method": "$request_method", '
    '"uri": "$request_uri", '
    '"remote_user": "$remote_user", '
    '"remote_addr": "$remote_addr", '
    '"https": "$https", '
    '"host": "$host", '
    '"protocol": "$server_protocol", '
    '"user_agent": "$http_user_agent", '
    '"referrer": "$http_referer", '
    '"status": $status, '
    '"response_time": $request_time, '
    '"response_body_bytes": $body_bytes_sent, '
    '"upstream_response_time": $upstream_response_time, '
    '"logger": "nginx"'
  '}';

  access_log  /var/log/nginx/access.log  json;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;
  client_max_body_size 0;
  #gzip  on;

  include /etc/nginx/conf.d/*.conf;

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /certs/api.crt;
    ssl_certificate_key /certs/api.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security max-age=15768000;
    ssl_stapling on;
    ssl_stapling_verify on;
    location / {
      try_files $uri @app;
    }
    location @app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_connect_timeout 1200s;
      proxy_send_timeout 1200s;
      proxy_read_timeout 1200s;
      fastcgi_send_timeout 1200s;
      fastcgi_read_timeout 1200s;
      proxy_pass http://unix:/var/run/gunicorn.sock;
    }
    location /static {
      alias /app/static;
    }
  }

}
daemon off;