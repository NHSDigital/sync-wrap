<ServiceCallout name="splunk-hec-callout">
    <DisplayName>splunk hec callout</DisplayName>
    <Properties/>
    <Request clearPayload="true" variable="myRequest">
        <IgnoreUnresolvedVariables>true</IgnoreUnresolvedVariables>
        <Set>
            <Headers>
                <Header name="Authorization">Splunk {private.splunk_hec_token}</Header>
            </Headers>
            <Payload contentType="application/json" variablePrefix="%" variableSuffix="#">
                {
                    "index": "requests_apm_ptl",
                    "time": "%client.received.start.timestamp#",
                    "host": "apigee:%virtualhost.name#",
                    "sourcetype": "apm-apigee-json",
                    "source": "apigee:%organization.name#:%environment.name#:%apiproxy.name#:%apiproxy.revision#",
                    "event": {
                        "messageId": "%messageid#",
                        "client": {
                            "ip": "%client.ip#",
                            "received_start": "%client.received.start.timestamp#",
                            "received_end": "%client.received.end.timestamp#",
                            "sent_start": "%client.sent.start.timestamp#",
                            "sent_end": "%client.sent.end.timestamp#"
                        },
                        "request": {
                            "uri": "%request.uri#",
                            "url": "%request.url#",
                            "verb": "%request.verb#",
                            "contentType": "%request.header.Content-Type#",
                            "contentLength": "%client.received.content.length#",
                            "contentEncoding": "%request.header.Content-Encoding#"
                        },
                        "response": {
                            "status_code": "%response.status.code#",
                            "contentType": "%response.header.Content-Type#",
                            "contentLength": "%response.header.Content-Length#",
                            "contentEncoding": "%response.header.Content-Encoding#"
                        },
                        "meta": {
                            "organization": "%organization.name#",
                            "product": "%apigee.apiproduct.name#",
                            "application": "%apigee.developer.app.name#",
                            "env ": "%environment.name#",
                            "virtualhost": "%virtualhost.name#"
                        },
                        "proxy": {
                            "name": "%apiproxy.name#",
                            "revision": "%apiproxy.revision#",
                            "basepath": "%proxy.basepath#",
                            "suffix": "%proxy.pathsuffix#",
                            "clientIP": "%client.ip#"
                        },
                        "target": {
                            "host": "%target.host#",
                            "basepath": "%request.uri#",
                            "statusCode": "%target.response.status.code#",
                            "contentLength": "%target.received.content.length#",
                            "targetURL": "%request.url#",
                            "received_start": "%target.received.start.timestamp#",
                            "received_end": "%target.received.end.timestamp#",
                            "sent_start": "%target.sent.start.timestamp#",
                            "sent_end": "%target.sent.end.timestamp#"
                        },
                        "error": {
                            "isError": "%is.error#",
                            "isPolicyError": "%apigee.edge.execution.is_policy_error#",
                            "isTargetError": "%apigee.edge.execution.is_target_error#",
                            "policyErrorPolicyName": "%apigee.edge.execution.fault_policy_name#",
                            "policyErrorFlowName": "%apigee.edge.execution.fault_flow_name#",
                            "error": "%error#",
                            "content": "%error.content#",
                            "message": "%error.message#",
                            "statusCode": "%error.status.code#",
                            "reasonPhrase": "%error.reason.phrase#",
                            "transportMessage": "%error.transport.message#",
                            "state": "%error.state#"
                        }
                    }
                }
            </Payload>
            <Path>services/collector/event</Path>
            <Verb>POST</Verb>
        </Set>
    </Request>
    <Response>calloutResponse</Response>
    <HTTPTargetConnection>
        <Properties/>
        <URL>https://{private.splunk_host}</URL>
    </HTTPTargetConnection>
</ServiceCallout>